// This file was automatically generated by the OSHI API generator; do not edit!
package oshi.api.hardware.nic;

import java.lang.Override;
import oshi.api.DetachedContainerException;
import oshi.api.hardware.nic.internal.NicAttribute;
import oshi.driver.ComponentDriver;

/**
 * A network interface
 */
public class NicContainerWindows extends NicContainer implements NicWindows {
  private transient ComponentDriver driver;

  /**
   * The interface's locally unique identifier
   */
  public Long luid;

  /**
   * The interface's globally unique identifier
   */
  public String guid;

  /**
   * Whether the interface is in a paused state
   */
  public Boolean paused;

  /**
   * Whether the interface is in a low-power state
   */
  public Boolean lowpower;

  @Override
  public Long getLuid() {
    return luid;
  }

  @Override
  public Long queryLuid() {
    if (driver == null) {
      throw new DetachedContainerException();
    }
    driver.query(NicAttribute.LUID);
    return luid;
  }

  @Override
  public String getGuid() {
    return guid;
  }

  @Override
  public String queryGuid() {
    if (driver == null) {
      throw new DetachedContainerException();
    }
    driver.query(NicAttribute.GUID);
    return guid;
  }

  @Override
  public Boolean getPaused() {
    return paused;
  }

  @Override
  public Boolean queryPaused() {
    if (driver == null) {
      throw new DetachedContainerException();
    }
    driver.query(NicAttribute.PAUSED);
    return paused;
  }

  @Override
  public Boolean getLowpower() {
    return lowpower;
  }

  @Override
  public Boolean queryLowpower() {
    if (driver == null) {
      throw new DetachedContainerException();
    }
    driver.query(NicAttribute.LOWPOWER);
    return lowpower;
  }

  public void attach(ComponentDriver driver) {
    this.driver = driver;
    super.attach(driver);
    // Query all constant attributes:
  }
}
